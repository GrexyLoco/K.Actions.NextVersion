name: 🧪 Test K.Actions.NextVersion

on:
  push:
    branches: [ main, develop, feature/*, bugfix/*, major/*, refactor/* ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:
  workflow_call:  # 🚨 Allows this workflow to be called by release.yml
    outputs:
      test-success:
        description: 'Whether all tests passed'
        value: ${{ jobs.pester-tests.outputs.test-success }}
      total-tests:
        description: 'Total number of tests'
        value: ${{ jobs.pester-tests.outputs.total-tests }}
      passed-tests:
        description: 'Number of passed tests'
        value: ${{ jobs.pester-tests.outputs.passed-tests }}
      failed-tests:
        description: 'Number of failed tests'
        value: ${{ jobs.pester-tests.outputs.failed-tests }}

# 🌍 Environment Configuration
env:
  TEST_PATH: './K.PSGallery.SemanticVersioning/Tests'
  TEST_RESULTS_PATH: './TestResults.xml'
  SCRIPTS_PATH: './.github/scripts'

jobs:
  pester-tests:
    name: 🧪 PowerShell Pester Tests
    runs-on: windows-latest
    outputs:
      test-success: ${{ steps.test.outputs.test-success }}
      total-tests: ${{ steps.test.outputs.total-tests }}
      passed-tests: ${{ steps.test.outputs.passed-tests }}
      failed-tests: ${{ steps.test.outputs.failed-tests }}
      skipped-tests: ${{ steps.test.outputs.skipped-tests }}
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Pester Environment
        shell: pwsh
        run: |
          & "${{ env.SCRIPTS_PATH }}/Setup-PesterEnvironment.ps1" -TestPath "${{ env.TEST_PATH }}" -OutputPath "${{ env.TEST_RESULTS_PATH }}"

      - name: 🧪 Run Pester Tests
        id: test
        shell: pwsh
        run: |
          & "${{ env.SCRIPTS_PATH }}/Invoke-PesterTests.ps1" -TestPath "${{ env.TEST_PATH }}" -OutputPath "${{ env.TEST_RESULTS_PATH }}"

      - name: 📋 Generate Test Summary
        if: always()
        shell: pwsh
        run: |
          $testResults = @{
            TotalTests = '${{ steps.test.outputs.total-tests }}'
            PassedTests = '${{ steps.test.outputs.passed-tests }}'
            FailedTests = '${{ steps.test.outputs.failed-tests }}'
            SkippedTests = '${{ steps.test.outputs.skipped-tests }}'
          }
          & "${{ env.SCRIPTS_PATH }}/New-GitHubSummary.ps1" -SummaryType 'test' -TestResults $testResults

      - name: 📄 Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ env.TEST_RESULTS_PATH }}
          retention-days: 30

      - name: 📊 Publish Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: 🧪 Pester Test Results
          path: ${{ env.TEST_RESULTS_PATH }}
          reporter: dotnet-nunit
          fail-on-error: true
