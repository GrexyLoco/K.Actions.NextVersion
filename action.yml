name: 'K.Actions.NextVersion - Release-based Semantic Versioning'
description: 'Analyzes merged branches since last release to determine the next semantic version for PowerShell modules with Alpha/Beta support'
inputs:
  manifestPath:
    description: 'Path to the PowerShell module manifest (.psd1) file. Auto-discovery if empty.'
    required: false
    default: ''
  branchName:
    description: 'Current branch name for analysis. Uses github.ref_name if empty.'
    required: false
    default: ''
  commitMessage:
    description: 'Commit message for keyword analysis (legacy mode). Not used in release-based mode.'
    required: false
    default: ''
  targetBranch:
    description: 'Target branch for release analysis (main/master). Auto-discovery if empty.'
    required: false
    default: ''

outputs:
  currentVersion:
    description: 'The current version from the manifest file'
    value: ${{ steps.run-script.outputs.currentVersion }}
  bumpType:
    description: 'Detected version bump type (major/minor/patch/none)'
    value: ${{ steps.run-script.outputs.bumpType }}
  newVersion:
    description: 'The calculated new semantic version'
    value: ${{ steps.run-script.outputs.newVersion }}
  lastReleaseTag:
    description: 'The latest release tag found in the repository'
    value: ${{ steps.run-script.outputs.lastReleaseTag }}
  targetBranch:
    description: 'The target branch used for analysis'
    value: ${{ steps.run-script.outputs.targetBranch }}
  suffix:
    description: 'Alpha/Beta suffix if detected (alpha/beta/empty)'
    value: ${{ steps.run-script.outputs.suffix }}

runs:
  using: 'composite'
  steps:
    - id: run-script
      shell: pwsh
      run: |
        $modulePath = Join-Path $env:GITHUB_ACTION_PATH 'NextVersion' 'NextVersion.psd1'
        Import-Module $modulePath -Force
        $result = Get-NextVersion -ManifestPath '${{ inputs.manifestPath }}' -BranchName '${{ inputs.branchName }}' -CommitMessage '${{ inputs.commitMessage }}' -TargetBranch '${{ inputs.targetBranch }}'
        $outPath = $env:GITHUB_OUTPUT
        Out-File -FilePath $outPath -InputObject "currentVersion=$($result.CurrentVersion)" -Append -Encoding utf8
        Out-File -FilePath $outPath -InputObject "bumpType=$($result.BumpType)" -Append -Encoding utf8
        Out-File -FilePath $outPath -InputObject "newVersion=$($result.NewVersion)" -Append -Encoding utf8
        Out-File -FilePath $outPath -InputObject "lastReleaseTag=$($result.LastReleaseTag)" -Append -Encoding utf8
        Out-File -FilePath $outPath -InputObject "targetBranch=$($result.TargetBranch)" -Append -Encoding utf8
        Out-File -FilePath $outPath -InputObject "suffix=$($result.Suffix)" -Append -Encoding utf8
